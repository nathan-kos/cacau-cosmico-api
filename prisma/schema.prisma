generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

// modelo de Usuario
model User {
    usu_Id           String     @id @default(uuid())
    usu_Nome         String
    usu_Email        String     @unique
    usu_Senha        String
    usu_Telefone     String     @db.Char(16)
    usu_CPF          String     @unique @db.Char(11)
    usu_Nasc         DateTime   @db.Date
    usu_pap          Papel      @default(USER)
    usu_Ativo        Boolean    @default(true)
    usu_Genero       Genero
    // relação
    Endereco         Endereco[]
    cartao           cartao[]
    // padrão
    usu_CriadoEm     DateTime   @default(now())
    usu_AtualizadoEm DateTime   @updatedAt
}

model Endereco {
    end_Id          String       @id @default(uuid())
    end_Rua         String
    end_Numero      String
    end_Bairro      String
    end_CEP         String       @db.Char(9)
    end_Complemento String?
    end_Cidade      String
    end_Tipo        TipoEndereco
    end_usu_id      String
    end_UF          UF
    end_Ativo       Boolean      @default(true)

    // relação
    end_usu          User     @relation(fields: [end_usu_id], references: [usu_Id])
    // padrão
    end_CriadoEm     DateTime @default(now())
    end_AtualizadoEm DateTime @updatedAt
}

model cartao {
    car_Id       String   @id @default(uuid())
    car_Nome     String
    car_Numero   String
    car_Validade String
    car_CVV      String
    car_usu_id   String
    car_Bandeira Bandeira
    car_Ativo    Boolean  @default(true)

    // relação
    car_usu          User     @relation(fields: [car_usu_id], references: [usu_Id])
    // padrão
    car_CriadoEm     DateTime @default(now())
    car_AtualizadoEm DateTime @updatedAt
}

// Chocolate
model Chocolate {
    cho_Id           String   @id @default(uuid())
    cho_Nome         String
    cho_Descricao    String
    cho_Valor        Float
    cho_Imagem       String
    cho_Ativo        Boolean  @default(true)
    cho_Peso         Float
    // padrão
    cho_CriadoEm     DateTime @default(now())
    cho_AtualizadoEm DateTime @updatedAt

    // relação
    cat_cho cat_cho[]
}

model cat_cho {
    cch_Id           String    @id @default(uuid())
    cch_cho_id       String
    cch_Categoria    categoria
    // relação
    cch_cho          Chocolate @relation(fields: [cch_cho_id], references: [cho_Id])
    // padrão
    cch_CriadoEm     DateTime  @default(now())
    cch_AtualizadoEm DateTime  @updatedAt
}

enum Papel {
    USER
    ADMIN
}

enum Genero {
    MASCULINO
    FEMININO
    OUTROS
}

enum Bandeira {
    VISA
    MASTERCARD
    ELO
    AMERICANEXPRESS
    HIPERCARD
}

enum TipoEndereco {
    RESIDENCIAL
    COMERCIAL
    ENTREGA
    COBRANCA
}

enum UF {
    AC
    AL
    AP
    AM
    BA
    CE
    DF
    ES
    GO
    MA
    MT
    MS
    MG
    PA
    PB
    PR
    PE
    PI
    RJ
    RN
    RS
    RO
    RR
    SC
    SP
    SE
    TO
}

enum categoria {
    BARRA
    BOMBOM
    TRUFA
    CAIXA
    BRANCO
    AMARGO
    AO_LEITE
    AMENDOIM
    NOZES
    CONFETE
    LICOR
    CONFEITADO
    RECHEADO
    SEM_ACUCAR
    SEM_LACTOSE
    OUTROS
}
