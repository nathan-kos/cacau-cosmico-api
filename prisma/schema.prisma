generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

// modelo de Usuario
model User {
    usu_Id           String     @id @default(uuid())
    usu_Nome         String
    usu_Email        String     @unique
    usu_Senha        String
    usu_Telefone     String     @db.Char(16)
    usu_CPF          String     @unique @db.Char(11)
    usu_Nasc         DateTime   @db.Date
    usu_pap          Papel      @default(USER)
    usu_Ativo        Boolean    @default(true)
    usu_Genero       Genero
    // relação
    Endereco         Endereco[]
    cartao           cartao[]
    // padrão
    usu_CriadoEm     DateTime   @default(now())
    usu_AtualizadoEm DateTime   @updatedAt
}

model Estado {
    est_Id           String   @id @default(uuid())
    est_Nome         String
    est_UF           String   @db.Char(2)
    // relação
    cidade           Cidade[]
    // padrão
    est_CriadoEm     DateTime @default(now())
    est_AtualizadoEm DateTime @updatedAt
}

model Cidade {
    cid_Id           String     @id @default(uuid())
    cid_Nome         String
    // relação
    estado           Estado     @relation(fields: [cid_est_id], references: [est_Id])
    cid_est_id       String
    // padrão
    cid_CriadoEm     DateTime   @default(now())
    cid_AtualizadoEm DateTime   @updatedAt
    Endereco         Endereco[]
}

model Endereco {
    end_Id          String       @id @default(uuid())
    end_Rua         String
    end_Numero      String
    end_Bairro      String
    end_CEP         String       @db.Char(9)
    end_Complemento String?
    end_cid_id      String
    end_Tipo        TipoEndereco
    end_usu_id      String

    // relação
    end_cid          Cidade   @relation(fields: [end_cid_id], references: [cid_Id])
    end_usu          User     @relation(fields: [end_usu_id], references: [usu_Id])
    // padrão
    end_CriadoEm     DateTime @default(now())
    end_AtualizadoEm DateTime @updatedAt
}

model cartao {
    car_Id       String   @id @default(uuid())
    car_Nome     String
    car_Numero   String
    car_Validade String
    car_CVV      String
    car_usu_id   String
    car_Bandeira Bandeira

    // relação
    car_usu          User     @relation(fields: [car_usu_id], references: [usu_Id])
    // padrão
    car_CriadoEm     DateTime @default(now())
    car_AtualizadoEm DateTime @updatedAt
}

enum Papel {
    USER
    ADMIN
}

enum Genero {
    MASCULINO
    FEMININO
    OUTROS
}

enum Bandeira {
    VISA
    MASTERCARD
    ELO
    AMERICANEXPRESS
    HIPERCARD
}

enum TipoEndereco {
    RESIDENCIAL
    COMERCIAL
    ENTREGA
    COBRANCA
}
